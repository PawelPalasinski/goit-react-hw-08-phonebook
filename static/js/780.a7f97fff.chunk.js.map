{"version":3,"file":"static/js/780.a7f97fff.chunk.js","mappings":"yOAAaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,oBCAzBC,GAAgBC,EAAAA,EAAAA,IAC3B,oBAD2C,mCAE3C,WAAOC,EAAGC,GAAV,gGAEsBC,EAAAA,EAAAA,IAAU,aAFhC,cAEUC,EAFV,yBAGWA,EAAIC,MAHf,yDAKWH,EAASI,gBAAgB,KAAMC,UAL1C,yDAF2C,yDAahCC,GAAaR,EAAAA,EAAAA,IACxB,sBADwC,mCAExC,WAAOS,EAAMP,GAAb,gGAE2BC,EAAAA,EAAAA,KAAW,YAAa,CAAEM,KAAAA,IAFrD,cAEUC,EAFV,yBAGWA,EAASL,MAHpB,yDAKWH,EAASI,gBAAgB,KAAEC,UALtC,yDAFwC,yDAa7BI,GAAgBX,EAAAA,EAAAA,IAC3B,yBAD2C,mCAE3C,WAAOY,EAAWV,GAAlB,gGAE2BC,EAAAA,EAAAA,OAAA,oBAA0BS,IAFrD,cAEUF,EAFV,yBAGWA,EAASL,MAHpB,yDAKWH,EAASI,gBAAgB,KAAEC,UALtC,yDAF2C,yD,oBC7B7C,GAAgB,UAAY,gC,UC0F5B,EAnFoB,WAClB,IAAMM,GAAWC,EAAAA,EAAAA,MACXnB,GAAWoB,EAAAA,EAAAA,IAAYlB,GAEvBmB,EAAY,mCAAG,WAAMC,GAAN,2EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,OACTC,EAAOF,EAAKE,KAAKC,MACjBC,EAAQJ,EAAKI,MAAMD,MAErB3B,EAAS6B,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,OAASA,CAAlB,KACpBK,MAAM,GAAD,OAAIL,EAAJ,+BACLM,EAAAA,GAAAA,MAAA,UAAeN,EAAf,iCAEAR,EAASL,EAAW,CAClBoB,IAAIC,EAAAA,EAAAA,MACJR,KAAAA,EACAE,MAAAA,KAEFI,EAAAA,GAAAA,QAAA,UAAiBN,EAAjB,iCACAF,EAAKW,SAhBY,2CAAH,sDAoBlB,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,gBACED,UAAWC,EAAAA,aACXJ,GAAG,QACHK,MAAM,OACNC,OAAO,OACPC,QAAQ,sBALV,UAOE,wBACE,wBACE,0BACE,iBACEC,EAAE,unBAOJ,iBACEA,EAAE,gjBAUZ,uCACA,kBAAMC,SAAUrB,EAAhB,WACE,kBAAOsB,QAAQ,OAAf,mBACA,kBACEC,KAAK,OACLlB,KAAK,OACLmB,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,mBACA,kBAAOL,QAAQ,SAAf,qBACA,kBACEC,KAAK,MACLlB,KAAK,QACLmB,YAAY,qBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQJ,KAAK,SAAb,0BACA,uBAIP,ECxFD,GAAgB,SAAW,+BCmD3B,EA1CoB,SAAC,GAAoC,IAAlCX,EAAiC,EAAjCA,GAAIP,EAA6B,EAA7BA,KAAMuB,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAYjChC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKiB,UAAWC,EAAAA,SAAhB,UACGa,GACD,sCACA,yBAEE,2BACE,wBACE,4BACGxB,EADH,KACWuB,QAGb,mBACEL,KAAK,SACLR,UAAWC,EAAAA,IACXc,QAAS,WACPjC,EAASF,EAAciB,GACxB,EALH,2BAcT,E,mBC7CYmB,GAAWC,EAAAA,EAAAA,IAAU,CAChCC,YAAa,GACbC,WAAWC,EAAAA,EAAAA,IAAe,CACxBC,QCRoB,oDDUtBC,SAAU,CAAC,YACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,YAAaD,EAAQE,MAAM,CACzBA,MAAO,iBAAM,WAAN,EACPC,aAAc,CAAC,cAGjBlD,WAAY+C,EAAQI,SAAS,CAC3BF,MAAO,SAAAG,GAAO,MAAK,CACjBC,IAAK,YACLC,OAAQ,OACRC,KAAMH,EAHM,EAKdI,gBAAiB,CAAC,cAYpBrD,cAAe4C,EAAQI,SAAS,CAC9BF,MAAO,gBAAG7B,EAAH,EAAGA,GAAH,MAAa,CAClBiC,IAAI,YAAD,OAAcjC,GACjBkC,OAAQ,SACRC,KAAMnC,EAHD,EAKPoC,gBAAiB,CAAC,cA9BJ,IAqClBC,EAIElB,EAJFkB,oB,GAIElB,EAHFmB,sBAGEnB,EADFoB,yB,SElDF,EAAyB,uBCsBzB,EAnBe,WACb,IAAMtD,GAAWC,EAAAA,EAAAA,MAQjB,OACE,kBACEiB,UAAWC,EACXO,KAAK,OACL6B,SAViB,SAAAnD,GACnBA,EAAEC,iBACF,IAAMI,EAAQL,EAAEoD,cAAc/C,MAC9BT,GAASyD,EAAAA,EAAAA,IAAehD,GACzB,EAOGkB,YAAY,yBAGjB,ECpBD,GAAgB,WAAa,uCC0C7B,EAxC0B,WACxB,OACE,iBAAKT,UAAWC,EAAAA,WAAhB,WACE,iBACED,UAAWC,EAAAA,OACXuC,QAAQ,MACRC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFzC,MAAM,QACNC,OAAO,QACPC,QAAQ,cARV,WAUE,0BACE,oBACEwC,OAAO,+IAGT,iBAAMvC,EAAE,kHACR,oBACEuC,OAAO,gIAGT,iBACEvC,EAAE,8bAMN,mBAAQwC,GAAG,OAAOC,GAAG,OAAOC,EAAE,aAEhC,uHAML,EClBD,EAjBkB,WAChB,MAAgCb,IAAxB5D,KAAMV,OAAd,MAAyB,GAAzB,EAEA,OACE,iCACE,SAAC,EAAD,IACCA,EAASoF,OAAS,GACjB,SAAC,EAAD,WACE,SAAC,EAAD,OAGF,SAAC,EAAD,MAIP,ECXc,SAASC,IACtB,IAAMnE,GAAWC,EAAAA,EAAAA,MACXmE,GAAYlE,EAAAA,EAAAA,IAAYtB,GAM9B,OAJAyF,EAAAA,EAAAA,YAAU,WACRrE,EAASd,IACV,GAAE,CAACc,KAGF,4BACE,SAAC,EAAD,KACA,UAAC,EAAD,YACE,SAAC,EAAD,IACCoE,IAAa,0CAIrB,C","sources":["redux/contacts/selectors.js","redux/contacts/operations.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","features/api/apiSlice.js","constants/baseURL.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/NoContactsMessage/NoContactsMessage.module.css?623f","components/NoContactsMessage/NoContactsMessage.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// GET @ /contacts\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/contacts');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// POST @ /contacts\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (text, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts', { text });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\n// DELETE @ /contacts/:id\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/${contactId}`);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"ContactForm_phonebook__3VpZj\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\n\nimport { nanoid } from 'nanoid';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const phone = form.phone.value;\n\n    if (contacts.find(cont => cont.name === name)) {\n      alert(`${name} is already your friend...`);\n      toast.error(`${name} is already your friend...`);\n    } else {\n      dispatch(addContact({\n        id: nanoid(),\n        name,\n        phone,\n      }));\n      toast.success(`${name} is now on your Friends List`);\n      form.reset();\n    }\n  };\n\n  return (\n    <div className={styles.phonebook}>\n      <svg\n        className={styles.phonebookSvg}\n        id=\"phone\"\n        width=\"60px\"\n        height=\"60px\"\n        viewBox=\"0 0 299.995 299.995\"\n      >\n        <g>\n          <g>\n            <g>\n              <path\n                d=\"M149.992,0.001C67.156,0.001,0,67.159,0,149.998c0,82.837,67.156,149.997,149.992,149.997\n\t\t\t\tc82.842,0,150.003-67.161,150.003-149.997C299.995,67.159,232.834,0.001,149.992,0.001z M210.947,217.132v10.374\n\t\t\t\tc0,5.729-4.645,10.374-10.374,10.374h-10.374h-57.256H96.829c-11.458,0-20.749-9.29-20.749-20.749V86.592\n\t\t\t\tc0-11.458,9.29-20.749,20.749-20.749h36.113h57.256h10.374c5.729,0,10.374,4.645,10.374,10.374v10.375h0.001V217.132z\n\t\t\t\t M231.695,86.592v130.54v10.374c0,5.729-4.645,10.374-10.374,10.374h-2.806c1.774-3.055,2.806-6.593,2.806-10.374v-10.374V86.592\n\t\t\t\tV76.219c0-3.781-1.032-7.319-2.806-10.374h2.806c5.729,0,10.374,4.645,10.374,10.374V86.592z\"\n              />\n              <path\n                d=\"M175.591,165.517c0,0-3.909-4.692-8.237-1.455c-3.226,2.412-9.023,7.776-10.416,9.078c0,0-9.69-5.166-15.424-9.884\n\t\t\t\tc-8.494-6.985-14.174-15.608-17.151-20.513l-2.223-4.191c0.775-0.835,6.71-7.189,9.277-10.639\n\t\t\t\tc3.232-4.326-1.452-8.235-1.452-8.235s-13.183-13.183-16.184-15.798c-3.003-2.622-6.461-1.167-6.461-1.167\n\t\t\t\tc-6.315,4.082-12.859,7.628-13.248,24.686c-0.013,15.969,12.109,32.438,25.215,45.188c13.131,14.402,31.162,28.833,48.588,28.817\n\t\t\t\tc17.055-0.384,20.598-6.93,24.678-13.245c0,0,1.46-3.455-1.159-6.458C188.774,178.693,175.591,165.517,175.591,165.517z\"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n      <h2>Phonebook</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <br />\n        <label htmlFor=\"number\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n        <br />\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\n// import { useSelector } from 'react-redux';\n// import {\n//   useGetContactsQuery,\n//   useDeleteContactMutation,\n// } from '../../features/api/apiSlice';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ id, name, number, children }) => {\n  // const filtersContacts = (contacts, filter) =>\n  //   contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n\n  // const filter = useSelector(state => state.filter);\n\n  // const { data: contacts = [] } = useGetContactsQuery();\n  // const [deleteContact] = useDeleteContactMutation();\n  // const contactsList = filtersContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.contacts}>\n      {children}\n      <h2>Contacts</h2>\n      <ul>\n\n        <li>\n          <p>\n            <span>\n              {name}: {number}\n            </span>\n          </p>\n          <button\n            type=\"button\"\n            className={styles.btn}\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            ⛌\n          </button>\n        </li>\n\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// https://www.youtube.com/watch?v=HyZzCHgG3AY <- React Redux Toolkit Query Tutorial and RTK Query CRUD Example App\n\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { BASE_URL } from 'constants/baseURL';\n\nexport const apiSlice = createApi({\n  reducerPath: '',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL,\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contacts'],\n    }),\n\n    addContact: builder.mutation({\n      query: contact => ({\n        url: 'contacts/',\n        method: 'POST',\n        body: contact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n\n    // updateContact: builder.mutation({\n    //   query: contacts => ({\n    //     url: `contacts/${contacts.id}`,\n    //     method: 'PATCH',\n    //     body: contacts,\n    //   }),\n    //   invalidatesTags: ['Contacts'],\n    // }),\n\n    deleteContact: builder.mutation({\n      query: ({ id }) => ({\n        url: `contacts/${id}`,\n        method: 'DELETE',\n        body: id,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\n// custom hooks\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  // useUpdateContactMutation,\n  useDeleteContactMutation,\n} = apiSlice;\n","export const BASE_URL = 'https://6334c762ea0de5318a08dccd.mockapi.io/v1/';\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/slices/filter';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    e.preventDefault();\n    const value = e.currentTarget.value;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <input\n      className={styles.filter}\n      type=\"text\"\n      onChange={changeFilter}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"sadMessage\":\"NoContactsMessage_sadMessage__tzUpR\"};","import React from 'react';\nimport styles from './NoContactsMessage.module.css';\n\nconst NoContactsMessage = () => {\n  return (\n    <div className={styles.sadMessage}>\n      <svg\n        className={styles.sadSvg}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"150px\"\n        height=\"150px\"\n        viewBox=\"0 0 128 128\"\n      >\n        <g>\n          <polygon\n            points=\"117.4,68.8 117.4,59.3 57.6,59.3 57.6,68.8 104.7,68.8 104.7,119.7 83.2,119.7 83.2,124.9 114.8,124.9 \n\t\t114.8,119.7 111.5,119.7 111.5,68.8 \t\"\n          />\n          <path d=\"M49.4,91.4H16.7V58.6h-6.6v37.7h0c0,0.2,0,0.4,0,0.6V126h5.8v-23H49v23h5.8V96.9C54.8,93.9,52.4,91.4,49.4,91.4z\" />\n          <polygon\n            points=\"95.6,32 103,52.8 90.2,52.8 90.2,56.7 106.8,56.7 106.8,55.4 106.8,52.8 97.2,26.2 103.2,3.5 98.9,2.3 87.5,44.7 \n\t\t91.9,45.9 \t\"\n          />\n          <path\n            d=\"M86.5,108.5L70.1,78.4c-1.2-2.6-3.9-4.2-6.5-4.2H43.7v-8.7H44c-4.3,0-7.9-3.6-7.9-7.9V44.8c0-0.9,0.5-1.4,1.4-1.4\n\t\ts1.4,0.5,1.4,1.4v12.8c0,2.8,2.4,5,5,5h12v-5.2h21.2c0,0,0-0.1,0-0.1c0-2.6-2.1-4.8-4.8-4.8c0,0,0,0,0,0H49v-18\n\t\tc0-2.6-1.8-4.6-4.5-5c-0.9-0.1-1.7-0.1-2.8,0c-9.9,0.7-19.9,8.8-21.2,19.3c-1.2,9.3-1.4,19.9-0.4,28.8c0.9,5.5,5.1,10.1,11.1,10.8\n\t\tc0.6,0.1,1.2,0.1,1.9,0.1H59l14.5,26.2c1.7,3.6,5.9,5,9.5,3.4C86.6,116.5,88.2,112.2,86.5,108.5z\"\n          />\n        </g>\n        <circle cx=\"65.3\" cy=\"36.9\" r=\"11.4\" />\n      </svg>\n      <p>\n        It looks like you don't have any friends. Try to find some and add them\n        to your phonebook\n      </p>\n    </div>\n  );\n}\n\nexport default NoContactsMessage;\n","import ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport { useGetContactsQuery } from '../../features/api/apiSlice';\nimport Filter from '../Filter/Filter';\nimport NoContactsMessage from '../NoContactsMessage/NoContactsMessage';\n\nconst Phonebook = () => {\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  return (\n    <>\n      <ContactForm />\n      {contacts.length > 0 ? (\n        <ContactList>\n          <Filter />\n        </ContactList>\n      ) : (\n        <NoContactsMessage />\n      )}\n    </>\n  );\n};\n\nexport default Phonebook;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PhoneBook from '../../components/Phonebook/Phonebook';\nimport ContactsList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n// import { Section } from '../../components/section/Section';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import styles from './Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <PhoneBook />\n      <ContactsList>\n        <Filter />\n        {isLoading && <p>'Loading'</p>}\n      </ContactsList>\n    </div>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectAllContacts","items","fetchContacts","createAsyncThunk","_","thunkAPI","axios","res","data","rejectWithValue","message","addContact","text","response","deleteContact","contactId","dispatch","useDispatch","useSelector","handleSubmit","e","preventDefault","form","target","name","value","phone","find","cont","alert","toast","id","nanoid","reset","className","styles","width","height","viewBox","d","onSubmit","htmlFor","type","placeholder","pattern","title","required","number","children","onClick","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","mutation","contact","url","method","body","invalidatesTags","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","onChange","currentTarget","filterContacts","version","xmlns","x","y","points","cx","cy","r","length","Contacts","isLoading","useEffect"],"sourceRoot":""}